name: FCM Push Notification

on:
  # 수동 실행 (매개변수 지원)
  workflow_dispatch:
    inputs:
      title:
        description: '알림 제목'
        required: false
        default: 'Daily Feed'
        type: string
      body:
        description: '알림 내용'
        required: false
        default: '새로운 기술 뉴스가 준비되었습니다!'
        type: string
      date:
        description: '날짜 (YYYY-MM-DD)'
        required: false
        default: ''
        type: string
      topic:
        description: '토픽 (all_users 기본값)'
        required: false
        default: 'all_users'
        type: string
      test_token:
        description: '테스트용 개별 토큰 (토픽 대신 사용)'
        required: false
        default: ''
        type: string

  # 다른 workflow에서 호출 가능
  workflow_call:
    inputs:
      title:
        description: '알림 제목'
        required: false
        default: 'Daily Feed'
        type: string
      body:
        description: '알림 내용'
        required: false
        default: '새로운 기술 뉴스가 준비되었습니다!'
        type: string
      date:
        description: '날짜 (YYYY-MM-DD)'
        required: false
        default: ''
        type: string
      topic:
        description: '토픽'
        required: false
        default: 'all_users'
        type: string

permissions:
  contents: read

jobs:
  send-fcm-notification:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('backend/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Set default date
        id: date
        run: |
          if [ -z "${{ inputs.date }}" ]; then
            echo "date=$(TZ='Asia/Seoul' date +%Y-%m-%d)" >> $GITHUB_OUTPUT
          else
            echo "date=${{ inputs.date }}" >> $GITHUB_OUTPUT
          fi

      - name: Send FCM notification to topic
        if: ${{ inputs.test_token == '' }}
        env:
          FIREBASE_SERVICE_ACCOUNT_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}
        working-directory: ./backend
        run: |
          echo "📱 토픽 '${{ inputs.topic }}'로 FCM 알림 발송 중..."
          go run cmd/fcm-send/main.go \
            --topic "${{ inputs.topic }}" \
            --title "${{ inputs.title }}" \
            --body "${{ inputs.body }}" \
            --date "${{ steps.date.outputs.date }}"

      - name: Send FCM notification to test token
        if: ${{ inputs.test_token != '' }}
        env:
          FIREBASE_SERVICE_ACCOUNT_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}
        working-directory: ./backend
        run: |
          echo "🧪 테스트 토큰으로 FCM 알림 발송 중..."
          go run cmd/fcm-send/main.go \
            --token "${{ inputs.test_token }}" \
            --title "${{ inputs.title }}" \
            --body "${{ inputs.body }}" \
            --date "${{ steps.date.outputs.date }}"

      - name: Notification sent
        run: |
          echo "✅ FCM 알림 발송 완료!"
          echo "📋 발송 정보:"
          echo "  - 제목: ${{ inputs.title }}"
          echo "  - 내용: ${{ inputs.body }}"
          echo "  - 날짜: ${{ steps.date.outputs.date }}"
          if [ -n "${{ inputs.test_token }}" ]; then
            echo "  - 테스트 토큰으로 발송"
          else
            echo "  - 토픽: ${{ inputs.topic }}"
          fi